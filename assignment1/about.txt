//TODO: Add David's changes to the spec (eg true/false)

The reserved words in the language are:
var, const, return, integer, boolean, void, main, if, else, true, false, while, skip

The following are tokens in the language:
, ; : = { } ( ) + - âˆ¼ || && == != < <= > >=

Integers are represented by a string of one or more digits (â€˜0â€™-â€˜9â€™) that
do not start with the digit â€˜0â€™, but may start with a minus sign (â€˜-â€™), e.g.
123, -456.

Identifiers are represented by a string of letters, digits or underscore
character (â€˜ â€™) beginning with a letter. Identifiers cannot be reserved words.

Comments can appear between any two tokens. There are two forms of comment:
one is delimited by /* and */ and can be nested;
the other begins with // and is delimited by the end of line and this type of comments may not be nested.

(1)
<program> |= <decl_list> <function_list> <main>

(2)
<decl_list> |= (<decl> ; <decl_list> | E)

(3)
<decl> |= <var_decl> | <const_decl>

(4)
<var_decl> |= var identifier:<type>

(5)
<const_decl> |= const identifier:<type> = <expression>

(6)
<function_list> |= (<function> <function_list> | E)

(7)
<function> |= <type> identifier (<parameter_list>)
{
<decl_list>
<statement_block>
return ( <expression> | E) ;
}

(8)
<type> |= integer | boolean | void

(9)
<parameter_list> |= <nemp_parameter_list> | E

(10)
<nemp_parameter_list> |= identifier:<type> | identifier:<type> , <nemp_parameter_list>

(11)
<main> |= main {
<decl_list>
<statement_block>
}

(12)
<statement_block> |= (<statement> <statement_block>) | E

(13)
<statement> |= identifier = <expression> ; |
identifier ( <arg_list> ) ; |
{ <statement_block> } |
if <condition> { <statement_block> } else {<statement_block> } |
while <condition> { <statement_block> } |
skip ;

(14)
<expression> |= <fragment> <binary_arith_op> <fragment> |
( <expression> ) |
identifier (<arg_list> ) |
identifier |
number

(15)
<binary_arith_op> |= + | -

(16)
<fragment> |= identifier | - identifier | number | true | false | <expression>

(17)
<condition> |= âˆ¼ <condition> |
( <condition> ) |
<expression> <comp_op> <expression> |
<condition>( || | && )<condition>

(18)
<comp_op> |= == | != | < | <= | > | >=

(19)
<arg_list> |= <nemp_arg_list> | E

(20)
<nemp_arg_list> |= identifier | identifier , <nemp_arg_list>
