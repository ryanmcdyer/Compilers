/* Generated By:JJTree&JavaCC: Do not edit this line. BasicLConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface BasicLConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 11;
  /** RegularExpression Id. */
  int BOOL = 12;
  /** RegularExpression Id. */
  int CONST = 13;
  /** RegularExpression Id. */
  int DO = 14;
  /** RegularExpression Id. */
  int ELSE = 15;
  /** RegularExpression Id. */
  int FALSE = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int INT = 18;
  /** RegularExpression Id. */
  int DOUBLE = 19;
  /** RegularExpression Id. */
  int MAIN = 20;
  /** RegularExpression Id. */
  int NOT = 21;
  /** RegularExpression Id. */
  int OR = 22;
  /** RegularExpression Id. */
  int RETURN = 23;
  /** RegularExpression Id. */
  int THEN = 24;
  /** RegularExpression Id. */
  int TRUE = 25;
  /** RegularExpression Id. */
  int VAR = 26;
  /** RegularExpression Id. */
  int VOID = 27;
  /** RegularExpression Id. */
  int WHILE = 28;
  /** RegularExpression Id. */
  int BEGIN = 29;
  /** RegularExpression Id. */
  int END = 30;
  /** RegularExpression Id. */
  int ID = 31;
  /** RegularExpression Id. */
  int CHAR = 32;
  /** RegularExpression Id. */
  int NUM = 33;
  /** RegularExpression Id. */
  int REAL = 34;
  /** RegularExpression Id. */
  int DIGIT = 35;
  /** RegularExpression Id. */
  int PLUS_SIGN = 36;
  /** RegularExpression Id. */
  int MINUS_SIGN = 37;
  /** RegularExpression Id. */
  int MULT_SIGN = 38;
  /** RegularExpression Id. */
  int DIV_SIGN = 39;
  /** RegularExpression Id. */
  int EQUALS_SIGN = 40;
  /** RegularExpression Id. */
  int NOT_EQUALS_SIGN = 41;
  /** RegularExpression Id. */
  int LESS_THAN = 42;
  /** RegularExpression Id. */
  int GREATER_THAN = 43;
  /** RegularExpression Id. */
  int LESS_THAT_EQUALS = 44;
  /** RegularExpression Id. */
  int GREATER_THAN_EQUALS = 45;
  /** RegularExpression Id. */
  int LEFT_BRACKET = 46;
  /** RegularExpression Id. */
  int RIGHT_BRACKET = 47;
  /** RegularExpression Id. */
  int COMMA = 48;
  /** RegularExpression Id. */
  int SEMICOLON = 49;
  /** RegularExpression Id. */
  int TYPE_ASSIGN = 50;
  /** RegularExpression Id. */
  int ASSIGN = 51;
  /** RegularExpression Id. */
  int OTHER = 52;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 5>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"and\"",
    "\"bool\"",
    "\"const\"",
    "\"do\"",
    "\"else\"",
    "\"false\"",
    "\"if\"",
    "\"int\"",
    "\"double\"",
    "\"main\"",
    "\"not\"",
    "\"or\"",
    "\"return\"",
    "\"then\"",
    "\"true\"",
    "\"var\"",
    "\"void\"",
    "\"while\"",
    "\"begin\"",
    "\"end\"",
    "<ID>",
    "<CHAR>",
    "<NUM>",
    "<REAL>",
    "<DIGIT>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\":=\"",
    "<OTHER>",
  };

}
