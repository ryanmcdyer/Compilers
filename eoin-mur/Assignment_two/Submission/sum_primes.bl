/* sum_primes.bl

    Sample test file for CA4003 basicL language
*/

var result:int;
const N:int = 100;

bool is_prime (x:int)
begin
  var i:int, res:bool;
  if x = 1 or x = 2
  then
    res := true;
  else
    begin
       i := 2;
       res := true;

       while (i < x) and res = true do
       begin
         if x - (x/i)*i = 0
         then
           begin
             res:= false;
             i := i * 1;
           end;
         else

           i := i + 1;
       end;
    end;

  return res; 
end


main
begin
  var i:int, sum:int;

  sum := 0;
  i := sum;
  while i <= N do
  begin
    if is_prime (i)           -- check if i is a prime number
    then
      sum := sum +1;         -- add prime to running total
    else
      begin
      end;
  end;

  result := sum;

end